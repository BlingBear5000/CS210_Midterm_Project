#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
using namespace std;

class CSVReader {
public:
    static vector<vector<string>> readCSV(const string& filename) {
        ifstream file(filename);
        vector<vector<string>> data;
        string line, word;

        if (!file.is_open()) {
            cerr << "Error: Could not open file " << filename << endl;
            return data;
        }

        while (getline(file, line)) {
            stringstream ss(line);
            vector<string> row;
            while (getline(ss, word, ',')) {
                row.push_back(word);
            }
            data.push_back(row);
        }
        file.close();
        return data;
    }
};

struct School {
    string name;
    string address;
    string city;
    string state;
    string county;
    School* next;
    School(string n, string a, string c, string s, string co) : name(n), address(a), city(c), state(s), county(co), next(nullptr) {}
};

class SchoolList {
    School* head;
    School* tail;
    public:
    SchoolList() : head(nullptr), tail(nullptr) {}
    void insertFirst(School* school) {
        if (head == nullptr) {
            head = school;
            tail = school;
            return;
        }
        school->next = head;
        head = school;
    }
    void insertLast(School* school) {
        if (head == nullptr) {
            head = school;
            tail = school;
            return;
        }
        tail->next = school;
        tail = tail->next;
    }
    void deleteByName(string name) {
        if (head == nullptr) {
            return;
        }
        if (head->name == name) {
            head = head->next;
        }
        else {
            School* temp = head;
            while (temp->next != nullptr) {
                if (temp->next->name == name) {
                    delete temp->next;
                    temp->next = temp->next->next;
                }
                temp = temp->next;
            }
            tail = temp;
        }
    }
    void findByName(string name) {
        if (head == nullptr) {
            return;
        }
        if (head->name == name) {
            cout << head->name << ", " << head->address << ", " << head->city << ", " << head->state << ", " << head->county << endl;
        }
        else {
            School* temp = head;
            while (temp->next != nullptr) {
                if (temp->next->name == name) {
                    cout << temp->next->name << ", " << temp->next->address << ", " << temp->next->city << ", " << temp->next->state << ", " << temp->next->county << endl;
                }
                temp = temp->next;
            }
        }
    }
    void display() {
        if (head == nullptr) {
            return;
        }
        School* temp = head;
        while (temp != nullptr) {
            cout << temp->name << endl;
            temp = temp->next;
        }
    }
};

int main() {
    SchoolList list;
    CSVReader reader;
    vector<vector<string>> schools = reader.readCSV("Illinois_Peoria_Schools.csv");
    for (int i = 1; i < schools.size(); i++) {
        string n = schools[i][0];
        string a = schools[i][1];
        string c = schools[i][2];
        string s = schools[i][3];
        string co = schools[i][4];
        School* temp = new School(n, a, c, s, co);
        list.insertFirst(temp);
    }
    cout << "Search School: ";
    string schoolName;
    getline(cin, schoolName);
    list.findByName(schoolName);
    cout << "Delete School: ";
    string schoolName2;
    getline(cin, schoolName2);
    list.deleteByName(schoolName2);
    list.display();
    return 0;
}
